===>启动spring boot 首次启动重要注解
1.The @SpringBootApplication annotation is equivalent to using @Configuration, @EnableAutoConfiguration and @ComponentScan
  with their default attributes
  -- @SpringBootApplication 等价于同时使用 @Configuration, @EnableAutoConfiguration, @ComponentScan

===>属性配置
2.*.yml文件里边<推荐优先使用yml文件而不是properties文件。>:
     ①.“:”后边加一个空格再写值，比如：port: 8080（正确）port:8080（错误）。
     ②.在配置文件中重用配置：
         person:
           name: "yangrui"
           age: 12
           desc: "name: ${person.name} age: ${person.age}"

3.@Value:可以把配置文件中的属性值注入到类的某个属性中，比如：
      @Value("${person.name}")
      private String name

4.可以把配置文件的值注入实体中，比如：
      @ConfigurationProperties(prefix = "person")
      @Component
      public class PersonProperties {

          private String name;

          private Integer age;

          private String desc;

          @NestedConfigurationProperty
          private Favor favor;

          //getter setter 方法
      }
  只需在对应类上加上面两个注解。
注意：
    对于嵌套的属性不想使用内部类（spring boot 1.3.0.RELEASE以后，这种内部类必须声明为public，否则报错），
    可以使用@NestedConfigurationProperty注解，对应的属性类型可以定义在其他地方。

5.多环境配置文件切换：
     spring:
       profiles:
         active: dev
  如果是jar文件启动可以这样：java -jar target/springbootdemo01-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev

